def even_fib_numbers() -> int:
    """
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2,
    the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do not exceed four million,
    find the sum of the even-valued terms.
    expects: the upper limit in  the terms in the Fibonacci sequence whose values do not exceed four million.
    modifies: nothing
    returns: the sum of the even-valued terms below 4 000 000.
    """
    start = 1
    second = 1
    even_sum = 0
    next = 0
    while next < 4000000:
        next = start + second
        start, second = second, next
        if next % 2 == 0:
            even_sum += next
    return even_sum


if __name__ == '__main__':
    print(even_fib_numbers())

